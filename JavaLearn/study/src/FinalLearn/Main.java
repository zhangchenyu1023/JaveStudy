package FinalLearn;
/*
final关键字代表最终、不可改变的。

常见四种用法：
1. 可以用来修饰一个类
    final类不能被继承，因此其中的方法不能被重写
2. 可以用来修饰一个方法
    当final关键字用来修饰一个方法的时候，这个方法就是最终方法，也就是不能被覆盖重写。
    对于类、方法来说，abstract关键字和final关键字不能同时使用，因为矛盾。
3. 还可以用来修饰一个局部变量
    对于基本类型来说，不可变说的是变量当中的数据不可改变
    对于引用类型来说，不可变说的是变量当中的地址值不可改变
4. 还可以用来修饰一个成员变量
    对于成员变量来说，如果使用final关键字修饰，那么这个变量也照样是不可变。
    1. 由于成员变量具有默认值，所以用了final之后必须手动赋值，不会再给默认值了。
    2. 对于final的成员变量，要么使用直接赋值，要么通过构造方法赋值。二者选其一。
    3. 必须保证类当中所有重载的构造方法，都最终会对final的成员变量进行赋值。
 */
public class Main {
    public static void main(String[] args) {
        int num1 = 10;
        System.out.println(num1); // 10
        num1 = 20;
        System.out.println(num1); // 20

        // 一旦使用final用来修饰局部变量，那么这个变量就不能进行更改。
        // “一次赋值，终生不变”
        final int num2 = 200;
        System.out.println(num2); // 200

        //        num2 = 250; // 错误写法！不能改变！

        // 正确写法！只要保证有唯一一次赋值即可
        final int num3;
        num3 = 30;

    }
}
